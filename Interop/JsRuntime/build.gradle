buildscript {
    apply from: "$rootDir/gradle/kotlinGradlePlugin.gradle"
}

apply plugin: 'kotlin'

configurations {
    runtime
}

dependencies {
    runtime project(':Interop:StubGenerator')
}

def packages = [
    [name: 'math', pkg: 'kotlinx.interop.wasm.math'],
    [name: 'dom',  pkg: 'kotlinx.interop.wasm.dom' ]
]

// Just an umbrella for all the generating tasks
task generateWasmStubs

packages.each {
    def name = it.name
    def pkg = it.pkg

    task "generate${name}Stubs"(type: JavaExec) {
        dependsOn ':Interop:StubGenerator:classes'
        def kotlinStubsDir = file("$buildDir/wasm-stubs/$name/kotlin")
        def jsStubsDir = file("$buildDir/wasm-stubs/$name/js")

        main = 'org.jetbrains.kotlin.native.interop.gen.wasm.MainKt'
        classpath = configurations.runtime
        jvmArgs = ["-Dfile.encoding=UTF-8"] // TODO: Do we need other params?
        args = ['-pkg', pkg,
                '-target', 'wasm32',
                "-generated", kotlinStubsDir,
                "-natives", jsStubsDir,
                "-jsstubsname", name]

        outputs.dir(kotlinStubsDir)
        outputs.dir(jsStubsDir)
    }

    generateWasmStubs.dependsOn "generate${name}Stubs"
}
